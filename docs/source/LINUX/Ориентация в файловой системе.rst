Ориентация в файловой системе LINUX
===================================

Использование терминала. Доступ к командной строке. Вход в систему Linux и выполнение простых команд с помощью оболочки.
------------------------------------------------------------------------------------------------------------------------

Linux — это операционная система, как windows, имеющая ряд собственных особенностей. Правда, разобраться в нем несколько сложнее, потому что большинство операций выполняется в командной строке. Различные дистрибутивы Linux имеют графические оболочки, упрощающие работу с операционной системой, но доступа к графическому интерфейсу устройства может и не быть, поэтому важно уметь работать с командной строкой. Ниже будут описаны основные команды с примерами.

Где я? Как понять, где находишься
---------------------------------

Команда pwd:
pwd   --- мы ввели команду
/home/test   --- ответ системы, мы находимся в домашней директории пользователя test

Очень полезная команда, когда у вас нет ничего, кроме командной строки под рукой. Расшифровывается как Print Working Directory.

Как понять, что находится в папке
---------------------------------

Команда ls позволяет просмотреть содержимое каталога:

Хотя лучше использовать команду сразу с флагом «l»:


ls -l

Такая команда выведет более читабельный список, где можно будет сразу увидеть дату создания файла, его размер, автора и выданные файлу права.

У команды есть и другие флаги, но чаще всего вы будете использовать именно «ls – l».

Как перейти в другую директорию
-------------------------------

С помощью команды cd:
~~~~~~~~~~~~~~~~~~~~~
Пример:
::
  cd <путь к директории>

Путь может быть абсолютным или относительным.

По абсолютному пути
~~~~~~~~~~~~~~~~~~~

Либо у вас где-то записан путь, «куда идти», либо вы подсмотрели его в графическом интерфейсе (например, в WinSCP).

Вставляем путь в командную строку после «cd»
cd /home/student/log

Ну вот, мы переместились из домашней директории (обозначается как ~) в /home/student/log.

По относительному пути
~~~~~~~~~~~~~~~~~~~~~~

Относительный путь — относительно вашей текущей директории, где вы сейчас находитесь. Если я уже нахожусь в /home/student, а мне надо в /home/student/log, команда будет такой:
cd log  --- перейди в папку log из той директории, где ты сейчас находишься


Если мне надо из /home/student/photo в /home/student/photo/city/msk/2017/cat_1, команда будет такой:
cd city/msk/2017/cat_1

Я не пишу /home/student/photo, так как я уже там.

В линуксе можно задавать путь относительно домашней папки текущего пользователя. Домашняя директория обозначается ~/. Заметьте, не ~, а именно ~/. Дальше вы уже можете указывать подпапки:
cd  ~/log

Эта команда будет работать отовсюду. И переместит нас в /home/user/log.

Вот пример, где я вошла под пользователем students. Исходно была в директории /var, а попала в /home/students/log:

С автодополнением
~~~~~~~~~~~~~~~~~

Если вы начнете набирать название папки и нажмете Tab, система сама его дополнит. Если просто нажмете Tab, ничего не вводя, система начнет перебирать возможные варианты:

— (cd tab) Может, ты имел в виду папку 1?
— (tab) Нет? Может, папку 2?
— (tab) Снова нет? Может, папку 3?
— (tab) Снова нет? Может, файл 1 (она перебирает имена всех файлов и директорий, которые есть в той, где вы сейчас находитесь)?
— (tab) У меня кончились варианты, поехали сначала. Папка 1?

cd lon(Tab) → cd long-long-long-long-name-folder — начали вводить название папки и система сама подставила имя (из тех, что есть в директории, где мы находимся).
cd (Tab)(Tab)(Tab) — система перебирает все файлы / папки в текущей директории.
Это очень удобно, когда перемещаешься в командной строке. Не надо вспоминать точное название папки, но можно вспомнить первую букву-две, это сократит количество вариантов.


Подняться наверх
~~~~~~~~~~~~~~~~

Подняться на уровень выше:
cd ..

Если нужно поднять на два уровня выше, то
cd ../..
И так до бесконечности. Можно использовать файл, лежащий на уровне выше или просто сменить директорию.
Обратите внимание, что команда для линукса отличается от команды для windows — слеш обратный. В windows это «cd ..\..», а в линуксе именно «cd ../..».

    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; height: auto;">
        <iframe src="https://www.youtube.com/embed/OMa5AyJ6cBo" frameborder="0" allowfullscreen style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></iframe>
    </div>

Как создать директорию
----------------------
Используйте команду mkdir:
mkdir test  --- создает папку с названием «test» там, где вы находитесь
Можно и в другом месте создать папку:
mkdir /home/test   --- создает папку «test» в директории /home, даже если вы 
сейчас не там
Когда это нужно? Например, если вам надо сделать бекап логов. Создаете папку и сохраняете туда нужные логи. Или если вы читаете инструкцию по установке ПО и видите там «создать папку». Через командную строку это делается именно так.

Как создать файл
----------------

Командой touch:
touch app.log
Такая команда создаст пустой файл с названием «app.log». А потом уже можно открыть файл в редакторе и редактировать.

    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; height: auto;">
        <iframe src="https://www.youtube.com/embed/V7v8TuXKSko" frameborder="0" allowfullscreen style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></iframe>
    </div>

Как отредактировать файл
------------------------

Чтобы отредактировать файл, следует воспользоваться одним из консольных текстовых редакторов:
nano — более простая программа, рассчитана на новичков
vim — более сложная, но позволяет сделать кучу всего



Начнем с nano. Указываете имя команды и путь в файлу:
nano test_env.json
Для перемещения по файлу используйте кнопки со стрелками. После того, как закончите редактировать файл, нажмите:
Ctrl+O — чтобы сохранить
Ctrl+X — для выхода

Самое приятное в nano — это подсказки внизу экрана, что нажать, чтобы выйти.


А вот с vim с этим сложнее. В него легко зайти:
vim test_env.json
vi test_env.json     (предшественник vim)

При попытке выйти начинается легкая паника, потому что ни одна из стандартных комбинаций не срабатывает: Esc, ctrl + x, ctrl + q… 
Для выхода надо набрать:
:q — закрыть редактор
:q! — закрыть редактор без сохранения
Двоеточие запускает командный режим, а там уже вводим команду «q» (quit).
Исходно, когда мы открываем файл через vim, то видим его содержимое, а внизу информацию о файле:



Когда нажимаем двоеточие, оно печатается внизу:

Если не печатается, попробуйте нажать Esc (вернуться в нормальный режим), потом Enter (подтвердить команду), а потом снова печатайте.

Если нужно выйти, сохранив изменения, используйте команду
:w — сохранить файл;
:q — закрыть редактор;

Как перенести / скопировать файл
--------------------------------

Допустим, у нас в директории /opt/app/log находится app.log, который мы хотим сохранить в другом месте. Как перенести лог в нужное место, если нет графического интерфейса, только командная строка?

Скопировать файл
~~~~~~~~~~~~~~~~

Команда:
::
  cp что_копировать куда_копировать
  Если мы находимся в директории /opt/app/log:
  cp app.log /home/olga

В данном примере мы использовали относительный путь для «что копировать» — мы уже находимся рядом с логом, поэтому просто берем его. А для «куда копировать» используем абсолютный путь — копируем в /home/olga.



Можно сразу переименовать файл:
cp app.log /home/olga/app_test_2020_03_08.log

В этом случае мы взяли app.log и поместили его в папку /home/olga, переименовав при этом в app_test_2020_03_08.log. 
Если в папке, в которую мы пытаемся скопировать файл с таким именем уже есть, система не будет ничего спрашивать, просто перезапишет его. Для примера положим в папку log внутри домашней директории файл «app.log», который там уже есть:





Скопировать директорию
----------------------
Команда остается та же, «cp», только используется ключ R — «копировать папку рекурсивно»:
cp -r  путь_к_папке  путь_к_новому_месту

Например:
cp /opt/app/log /home/olga

Так в директории /home/olga появится папка «log».


Переместить файл
----------------
Если надо переместить файл, а не скопировать его, то вместо cp (copy) используем mv (move).



cp app.log /home/olga
↓
mv app.log /home/olga

Можно использовать относительные и абсолютные пути:
mv /opt/app/logs/app.log /home/olga — абсолютные пути указаны, команда сработает из любого места

Можно сразу переименовать файл:
mv app.log /home/olga/app_2020_03_08.log — перенесли лог в /home/olga и переименовали




Переместить директорию
----------------------

Аналогично перемещению файла, команда mv


mv /opt/app/log/  /home/olga/bakup/

Как удалить файл
----------------

С помощью команды rm (remove):
rm test.txt  — удалит файл test.txt

Если нужно удалить все файлы в текущей папке, используйте «*»:
rm *  — удалит все файлы в текущей директории

Если нужно удалить папку, надо добавить флаг -r (recursive):
rm -r test_folder

Если вы пытаетесь удалить файлы, которые уже используются в программе или доступны только для чтения, система будет переспрашивать:



А теперь представьте, что вы чистите много файлов. И на каждый система переспрашивает, и надо постоянно отвечать «да, да, да...» (y – enter, y – enter, y – enter)… Чтобы удалить все без вопросов, используйте флаг -f (force):
rm -rf test_folder    --- удалит все не спрашивая



С применением данных флагов следует быть аккуратным, с флагом f пользователя не переспрашивают, стоит ли удалять определенный файл, файл удаляется сразу без возможности восстановления.

Опция -v показывает имена удаляемых файлов:
rm -rfv test_folder   --- удалит папку со всем содержимым, но выведет имена удаляемых файлов







Как изменить владельца файла
----------------------------

Если у вас есть root-права, то вы наверняка будете выполнять все действия под ним. И тогда любой созданный файл, любая папка будут принадлежать root-пользователю.

Это плохо, потому что никто другой с ними работать уже не сможет. Но можно создать файл под root-ом, а потом изменить его владельца с помощью команды chown.

Допустим, что я поднимаю сервис testbase. И он должен иметь доступ к директории user и файлу test.txt в другой директории. Так как никому другому эти файлики не нужны, а создал я их под рутом, то просто меняю владельца:



chown testbase:testbase test.txt — сменить владельца файла
chown -R testbase:testbase user     — сменить владельца папки
В итоге был владелец root, а стал testbase. То, что надо!
Как установить приложение

Если вы привыкли к windows, то для вас установка приложения — это скачать некий setup.exe файл, запустить и несколько раз нажать «далее-далее-далее». В линуксе все немного по-другому. Тут приложения ставятся как пакеты. И для каждой системы есть свой менеджер пакетов:



yum — red hat, centos
dpkg, apt — debian 

Давайте посмотрим на примере, как это работает. В командной строке очень удобно работать с Midnight Commander (mc) — это как FAR на windows. К сожалению, программа далеко не всегда есть в «чистом» дистрибутиве.

Вы хотите вызвать Midnight Commander, но он не устновлен, о чем сообщает система:
mc



Ничего страшного, установите это приложение через apt:
sudo apt install mc


Пакетный менеджер найдет программу в репозитории и уточнит размер свободного места на диске для его установки, а потом уточнит, согласны ли вы поставить программу с учетом ее размеров. Если да, печатаем «y»:



Система установит требуемый пакет.

Теперь, если напечатать «mc» в командной строке, запустится Midnight Commander:




Как запустить приложение
------------------------

Некоторые приложения запускаются через скрипты. Например, чтобы запустить сервер приложения WildFly, нужно перейти в папку bin и запустить там standalone.sh. Файл с расширением .sh — это скрипт.

Чтобы запустить скрипт, нужно указать полный путь к нему:



/opt/cdi/jboss/bin/standalone.sh — запустили скрипт standalone.sh

Это важно! Даже если вы находитесь в той папке, где и скрипт, он не будет найден, если просто указать название sh-скрипта. Надо написать так:
./standalone.sh — запустили скрипт, если мы в той же директории

Поиск идет только в каталогах, записанных в переменную PATH. Так что если скрипт используется часто, добавляйте путь туда и вызывайте просто по названию:
standalone.sh --- запустили скрипт standalone.sh, путь к которому прописан в PATH

Если же приложение запускается как сервис, то все еще проще:
service test start — запустить сервис под названием «test»
service test stop — остановить сервис

Чтобы сервис test запускался автоматически при рестарте системы, используйте команду:
chkconfig test on

Она добавит службу в автозапуск.
Как понять, где установлено приложение

Вот, например, для интеграции Jenkins и newman в Jenkins надо прописать полный путь к ньюману в параметре PATH. Но как это сделать, если newman ставился автоматически через команду install? И вы уже забыли, какой путь установки он вывел? Или вообще не вы ставили?

Чтобы узнать, куда приложение установилось, используйте whereis (без пробела:
whereis newman





Как создать архив
-----------------

Стандартная утилита, которая будет работать даже на «голой» системе — tar. Правда, для ее использования надо запомнить флаги. Для создания архива стандартная комбинация cvzf:


tar -cvzf archive.tar.gz /home/test



В данном примере мы упаковали директорию /home/test, внутри которой было две картинки — 502.jpg и 504.jpg.

Для распаковки меняем флаг «c» на «x» и убираем «z»:



tar -xvf archive.tar.gz



Хотя система пишет, что распаковала «/home/test», на самом деле папка «test» появляется там, где мы сейчас находимся.

Давайте разберемся, что все эти флаги означают:



c — создать архив в linux
x — извлечь файлы из архива
v — показать подробную информацию о процессе работы (без него мы бы не увидели, какие файлики запаковались / распаковались)
f — файл для записи архива
z — сжатие

Для упаковки используется опция c — Create, а для распаковки x — eXtract.
Если очень хочется использовать rar, то придется изгаляться. Через apt установка не прокатит:
apt install rar
apt install unrar
Говорит, нет такого пакета:
No package rar available.
Error: Nothing to do

Придется выполнить целую пачку команд! Сначала скачиваем, разархивируем и компилируем:
wget http://rarlabs.com/rar/rarlinux-x64-5.4.0.tar.gz
tar xzf rarlinux-x64-5.4.0.tar.gz
cd rar
make install

Устанавливаем:
mkdir -p /usr/local/bin
mkdir -p /usr/local/lib
cp rar unrar /usr/local/bin
cp rarfiles.lst /etc
cp default.sfx /usr/local/lib


И применяем:
unrar x test.rar
Как посмотреть использованные ранее команды

Иногда возникает ситуация, в которой проще посмотреть команду в истории введенных в консоль команд, чем ввести ее заново. Для того, чтобы посмотреть историю введенных команд, нужно:
↑  (стрелочка «наверх») — показать последнюю команду
history — показать последние 1000 команд

Если команда, которую требуется найти была введена недавно, можно найти ее, несколько раз нажав на стрелочку вверх. Линукс хранит историю команд даже при перезапуске устройства, в отличие от windows.

Как посмотреть свободное место

Сколько места свободно на дисках
df -h

Сколько весит директория
du -sh
du -sh *  --- с разбиением


Как узнать IP компьютера
------------------------

Чтобы узнать IP машины, используйте команду:


hostname -I

Также можно использовать ifconfig:
ifconfig — выведет много информации, в том числе ваш внешний IP
ip a — аналог
 
Как узнать версию OS
--------------------
Для установки некоторых пакетов стоит точно знать версию установленной на машине операционной системы, чтобы ее узнать, используйте команду:
cat /etc/*-release



Если нужна версия ядра:
uname -a

Как узнать, как работает команда
--------------------------------
Если вы не знаете, как работает команда, всегда можно открыть справку, используя встроенную команду man:
man ls



Закрыть мануал можно с помощью клавиши q. 

Если man у программы нет, используйте флаг -h (--help):
ls -h
